{"version":3,"sources":["components/wrapper.js","components/header.js","components/country.js","components/country-list.js","components/regionFilter.js","components/nameFilter.js","components/action-list.js","components/country-detail.js","components/loading.js","components/country-page.js","App.js","assets/js/reducer.js","serviceWorker.js","index.js"],"names":["WrapperStyled","styled","div","Wrapper","children","HeaderStyled","header","Header","setDarkMode","darkMode","className","to","onClick","CountryStyled","Country","flag","name","population","region","capital","alpha2Code","history","useHistory","push","toLowerCase","loading","src","alt","CountryListStyled","CountryList","dispatch","useDispatch","countryList","useSelector","state","length","countryListByRegion","countryListByName","useEffect","fetch","then","response","json","list","type","payload","console","log","catch","map","numericCode","key","RegionFilterStyled","select","RegionFilter","value","onChange","event","target","NameFilterStyled","label","NameFilter","placeholder","ActionListStyled","ActionList","CounttyDetailStyled","article","CountryDetail","nativeName","subregion","topLevelDomain","currencies","languages","borders","concatStr","datos","strContact","forEach","element","index","class","border","LodingStyled","Loading","CountryPageStyled","CountryPage","match","country","params","id","e","goBack","store","createStore","action","filter","includes","error","countryListFilter","undefined","App","useState","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c236899c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrapperStyled = styled.div`\r\n  padding: 0 1.5em;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n  return <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst HeaderStyled = styled.header`\r\n  color: var(--black);\r\n  background-color: var(--white);\r\n  box-shadow: 0 2px 4px 0px rgba(0,0,0,0.06);\r\n  margin-bottom: 1.5em;\r\n  .row {\r\n    height: 80px;\r\n    display flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  h1 {\r\n    font-size: 0.9em;\r\n    a {\r\n      text-decoration: none;\r\n      color: var(--black);\r\n    }\r\n  }\r\n  .darkmode {\r\n    font-weight: 600;\r\n    p {\r\n      display: flex;\r\n      align-items: center;\r\n      font-size: 14px;\r\n      cursor: pointer;\r\n    }\r\n    .darkmode__icon {\r\n      transform: rotate(-25deg);\r\n      margin-right: 10px;\r\n      width: 15px;\r\n      height: 15px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 3em;\r\n    h1 {\r\n      font-size: 1.5em;\r\n    }\r\n    .darkmode {\r\n      p {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header({ setDarkMode, darkMode }) {\r\n  function handleClick() {\r\n    setDarkMode(!darkMode);\r\n  }\r\n  return (\r\n    <HeaderStyled>\r\n      <Wrapper>\r\n        <div className=\"row\">\r\n          <h1>\r\n            <Link to=\"/\">Where in the world?</Link>\r\n          </h1>\r\n          <div className=\"darkmode\">\r\n            <p onClick={handleClick}>\r\n              <span className=\"darkmode__icon\">\r\n                <i className={ `fp-moon-${ darkMode ? \"dark\" : \"light\" }`}></i>\r\n              </span>\r\n              Dark Mode\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport slugify from \"slugify\";\r\n\r\nconst CountryStyled = styled.div`\r\n  text-align: left;\r\n  border-radius: 5px;\r\n  background-color: var(--white);\r\n  overflow: hidden;\r\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  border: 0.1px solid transparent;\r\n  transition: all .3s ease-in-out;\r\n  :hover {\r\n    border: 1px solid var(--grey-dark);\r\n    box-shadow: 0 7px 7px 2px rgba(0, 0, 0, 0.1);\r\n    transform: translateY(-5px)\r\n  }\r\n  h2 {\r\n    margin: 0 0 1rem;\r\n    font-size: 1.1em;\r\n  }\r\n  p {\r\n    font-size: 0.9em;\r\n    margin: 0 0 0.5rem;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 160px;\r\n    object-fit: cover;\r\n  }\r\n  .details {\r\n    padding: 1.5em 1.5em 2em;\r\n  }\r\n`;\r\n\r\nfunction Country({ flag, name, population, region, capital, alpha2Code}) {\r\n  const history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.push(`/country/${alpha2Code.toLowerCase()}`);\r\n  }\r\n  return (\r\n    <CountryStyled onClick={handleClick}>\r\n      <img loading=\"lazy\" src={flag} alt={name} />\r\n      <div className=\"details\">\r\n        <h2>{name}</h2>\r\n        <p>\r\n          <strong>Population:</strong> {population}\r\n        </p>\r\n        <p>\r\n          <strong>Region:</strong> {region}\r\n        </p>\r\n        <p>\r\n          <strong>Capital:</strong> {capital}\r\n        </p>\r\n      </div>\r\n    </CountryStyled>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Country from \"./country\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst CountryListStyled = styled.div`\r\n  .row {\r\n    display: grid;\r\n    justify-content: center;\r\n    grid-row-gap: 2.3em;\r\n    grid-column-gap: 80px;\r\n    grid-auto-flow: columns;\r\n    grid-template-columns: repeat(auto-fill, 260px);\r\n  }\r\n`;\r\n\r\nfunction CountryList() {\r\n  const dispatch = useDispatch();\r\n  const countryList = useSelector((state) => {\r\n    if (state.region !== \"none\" && state.name.length === 0) {\r\n      return state.countryListByRegion;\r\n    }\r\n    if (state.name.length > 0) {\r\n      return state.countryListByName;\r\n    }\r\n\r\n    return state.countryList;\r\n  });\r\n\r\n  //const [countryList, setCountryList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: \"SET_COUNTRY_LIST\",\r\n          payload: list,\r\n        });\r\n        console.log(list);\r\n        //setCountryList(data);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"hubo un error, que dolor que dolor que pena\");\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <CountryListStyled>\r\n      <Wrapper>\r\n        <div className=\"row\">\r\n          {countryList.length > 0 ? (\r\n            countryList.map(\r\n              ({ name, population, flag, region, capital, numericCode, alpha2Code }) => {\r\n                return (\r\n                  <Country\r\n                    key={numericCode}\r\n                    flag={flag}\r\n                    name={name}\r\n                    population={population}\r\n                    region={region}\r\n                    capital={capital}\r\n                    alpha2Code={alpha2Code}\r\n                  />\r\n                );\r\n              }\r\n            )\r\n          ) : (\r\n            <p>No encontramos ese pais...</p>\r\n          )}\r\n        </div>\r\n      </Wrapper>\r\n    </CountryListStyled>\r\n  );\r\n}\r\n\r\nexport default CountryList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst RegionFilterStyled = styled.select`\r\n  height: 48px;\r\n  padding: 0 1em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 9px 0px rgba(0,0,0,0.05);\r\n  background-color: var(--white);\r\n  color: var(--black);\r\n`;\r\n\r\nfunction RegionFilter() {\r\n  const dispatch = useDispatch();\r\n  const region = useSelector((state) => state.region );\r\n\r\n  function handleChange(event) {\r\n    dispatch({\r\n      type: 'SET_REGION',\r\n      payload: event.target.value\r\n    })\r\n  }\r\n  \r\n  return <RegionFilterStyled value={region} onChange={handleChange}>\r\n      <option value=\"none\">Filter by Region</option>\r\n      <option value=\"Africa\">Africa</option>\r\n      <option value=\"Americas\">America</option>\r\n      <option value=\"Asia\">Asia</option>\r\n      <option value=\"Europe\">Europa</option>\r\n      <option value=\"Oceania\">Oceania</option>\r\n  </RegionFilterStyled>;\r\n}\r\n\r\nexport default RegionFilter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst NameFilterStyled = styled.label`\r\n  display: grid;\r\n  grid-template: 1fr / 80px 1fr;\r\n  color: var(--grey-dark);\r\n  background-color: var(--white);\r\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\r\n  border-radius: 5px;\r\n  position: relative;\r\n  .clean {\r\n    position: absolute;\r\n    font-size: 18px;\r\n    right: 15px;\r\n    top: 10px;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: var(--black);\r\n    }\r\n  }\r\n  input {\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    border: none;\r\n    font-size: 0.8em;\r\n    height: 48px;\r\n    background-color: var(--white);\r\n    color: var(--grey-dark);\r\n    padding-right: 40px;\r\n    box-sizing: border-box;\r\n    ::placeholder {\r\n      opacity: 1;\r\n      color: var(--grey-placeholder);\r\n    }\r\n    :focus {\r\n      border: none;\r\n      outline: none;\r\n    }\r\n  }\r\n  i {\r\n    color: var(--grey-placeholder);\r\n    font-weight: bold;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n`;\r\n\r\nfunction NameFilter() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector((state) => state.name);\r\n\r\n  function handleChange(event) {\r\n    dispatch({\r\n      type: \"SET_NAME\",\r\n      payload: event.target.value,\r\n    });\r\n  }\r\n  function cleanInput(event) {\r\n    dispatch({\r\n      type: \"SET_NAME\",\r\n      payload: \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <NameFilterStyled>\r\n      <i className=\"fp-search\"></i>\r\n      <input\r\n        name=\"search\"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={handleChange}\r\n        placeholder=\"Search for a country...\"\r\n      />\r\n      {name.length > 0 && (\r\n        <span onClick={cleanInput} className=\"clean\">\r\n          x\r\n        </span>\r\n      )}\r\n    </NameFilterStyled>\r\n  );\r\n}\r\n\r\nexport default NameFilter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport RegionFilter from \"./regionFilter\";\r\nimport NameFilter from \"./nameFilter\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst ActionListStyled = styled.div`\r\n  .row {\r\n    display: grid;\r\n    grid-gap: 2.5em 0;\r\n    margin-bottom: 2.5em;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .row {\r\n      grid-template-columns: 480px 200px;\r\n      justify-content: space-between;\r\n      margin-bottom: 3em;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ActionList() {\r\n  return (\r\n    <ActionListStyled>\r\n      <Wrapper>\r\n        <div className=\"row\">\r\n          <NameFilter />\r\n          <RegionFilter />\r\n        </div>\r\n      </Wrapper>\r\n    </ActionListStyled>\r\n  );\r\n}\r\n\r\nexport default ActionList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CounttyDetailStyled = styled.article`\r\n  display: grid;\r\n  figure {\r\n    margin: 0 0 3rem;\r\n    font-size: 0;\r\n    width: 100%;\r\n    img {\r\n      width: 100%;\r\n      object-fit: cover;\r\n      object-position: center;\r\n    }\r\n  }\r\n  .title {\r\n    margin: 0 0 2rem;\r\n    font-size: 1.4em;\r\n  }\r\n  .subtitle {\r\n    font-weight: 600;\r\n    margin: 0 0 1rem;\r\n    font-size: 1rem;\r\n    width: 100%;\r\n  }\r\n  p {\r\n    font-size: 0.8rem;\r\n    margin: 0 0 1rem;\r\n    span {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  .details {\r\n    display: grid;\r\n    grid-row-gap: 2.5rem;\r\n    margin-bottom: 2rem;\r\n    .detail__left {\r\n    }\r\n    .detail__right {\r\n    }\r\n  }\r\n  .borders {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    span {\r\n      margin-right: 10px;\r\n      margin-bottom: 10px;\r\n      text-decoration: none;\r\n      background-color: var(--white);\r\n      color: var(--black);\r\n      box-shadow: 0 0px 7px rgba(0, 0, 0, 0.2);\r\n      border: none;\r\n      font-size: 0.7rem;\r\n      padding: 0.5rem 2rem;\r\n      display: inline-flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border-radius: 3px;\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 120px;\r\n    align-items: center;\r\n    .details {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    figure {\r\n      margin: 0;\r\n    }\r\n    .borders {\r\n      align-items: flex-start;\r\n    }\r\n    .subtitle {\r\n      width: auto;\r\n      margin-bottom:0;\r\n      margin-right: 20px;\r\n      line-height: 31px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CountryDetail({\r\n  name,\r\n  flag,\r\n  nativeName,\r\n  population,\r\n  region,\r\n  subregion,\r\n  capital,\r\n  topLevelDomain,\r\n  currencies = [],\r\n  languages = [],\r\n  borders = [],\r\n}) {\r\n  function concatStr(datos) {\r\n    let strContact = \"\";\r\n    datos.forEach((element, index) => {\r\n      if (index + 1 !== datos.length) {\r\n        strContact += `${element.name}, `;\r\n      } else {\r\n        strContact += `${element.name}`;\r\n      }\r\n    });\r\n    return strContact;\r\n  }\r\n\r\n  return (\r\n    <CounttyDetailStyled>\r\n      <figure>\r\n        <img loading=\"lazy\" src={flag} alt={name} />\r\n      </figure>\r\n      <div className=\"content\">\r\n        <h2 className=\"title\">{name}</h2>\r\n        <div className=\"details\">\r\n          <div className=\"details__left\">\r\n            <p>\r\n              <span>Native Name:</span> {nativeName}\r\n            </p>\r\n            <p>\r\n              <span>Population:</span> {population}\r\n            </p>\r\n            <p>\r\n              <span>Region:</span> {region}\r\n            </p>\r\n            <p>\r\n              <span>Sub Region:</span> {subregion}\r\n            </p>\r\n            <p>\r\n              <span>Capital:</span> {capital}\r\n            </p>\r\n          </div>\r\n          <div className=\"details__right\">\r\n            <p>\r\n              <span>Top Level Domain:</span> {topLevelDomain}\r\n            </p>\r\n            <p>\r\n              <span>Currencies:</span> {concatStr(currencies)}\r\n            </p>\r\n            <p>\r\n              <span>Langueages:</span> {concatStr(languages)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {\r\n          borders.length > 0 && <div className=\"borders\">\r\n            <h3 class=\"subtitle\">Border Countries:</h3>\r\n            {borders.map((border) => (\r\n              <span to=\"/\" key={border}>\r\n                {border}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        }\r\n        \r\n      </div>\r\n    </CounttyDetailStyled>\r\n  );\r\n}\r\n\r\nexport default CountryDetail;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LodingStyled = styled.div``;\r\n\r\nfunction Loading() {\r\n  return <LodingStyled>Loading....</LodingStyled>;\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport CountryDetail from \"./country-detail\";\r\nimport Loading from \"./loading\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst CountryPageStyled = styled.div`\r\n  .row {\r\n    padding: 1.2em 0em;\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n  }\r\n  .back {\r\n    background-color: var(--white);\r\n    color: var(--black);\r\n    box-shadow: 0 2px 9px 0px rgba(0,0,0,0.25);\r\n    border: none;\r\n    padding: 0.7em 2em;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 3px;\r\n    margin-bottom: 5em;\r\n    cursor: pointer;\r\n    outline: none;\r\n    transition: transform .3s ease-in-out, box-shadow .3s ease-in-out ;\r\n    :hover {\r\n      transform: translateY(-3px);\r\n      box-shadow: 0 7px 5px 0px rgba(0,0,0,0.25);\r\n    }\r\n    :focus,\r\n    :active {\r\n      border: none;\r\n      transform: translateY(0px);\r\n      box-shadow: 0 0 5px 0px rgba(0,0,0,0.15);\r\n      transition: transform .1s ease-in-out, box-shadow .1s ease-in-out ;\r\n    }\r\n    i {\r\n      margin-right: 10px;\r\n      font-size: 1.2em;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    .row {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CountryPage({ match, history }) {\r\n  const dispatch = useDispatch();\r\n  const country = useSelector((state) => state.country);\r\n\r\n  console.log(match.params.id);\r\n  \r\n  useEffect(() => {\r\n    fetch(\r\n      /*`https://restcountries.eu/rest/v2/name/${match.params.id.split('-').join(' ')}`*/\r\n      `https://restcountries.eu/rest/v2/alpha/${match.params.id}`\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((country) => {\r\n        dispatch({\r\n          type: \"GET_COUNTRY\",\r\n          payload: country,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  function handleClick() {\r\n    history.goBack();\r\n    dispatch({\r\n      type: \"GET_COUNTRY\",\r\n      payload: [],\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CountryPageStyled>\r\n      <Wrapper>\r\n        <div className=\"row\">\r\n          <button className=\"back\" to=\"/\" onClick={handleClick}>\r\n            <i className=\"fp-long-arrow-left\"></i>Back\r\n          </button>\r\n\r\n          {country.length === 0 ? (\r\n            <Loading />\r\n          ) : (\r\n            <CountryDetail {...country} />\r\n          )}\r\n        </div>\r\n      </Wrapper>\r\n    </CountryPageStyled>\r\n  );\r\n}\r\n\r\nexport default CountryPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./assets/js/reducer\";\n\nimport \"./assets/css/App.css\";\n\nimport Header from \"./components/header\";\nimport CountryList from \"./components/country-list\";\nimport ActionList from \"./components/action-list\";\n\nimport CountryPage from \"./components/country-page\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst initialState = {\n  error: \"\",\n  country: [],\n  countryList: [],\n  countryListByRegion: [],\n  countryListByName: [],\n  countryListFilter: [],\n  region: \"none\",\n  name: \"\",\n};\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const mainClass = darkMode ? \"is__darkmode\" : \"is__ligthmode\";\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }, []);\n\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/country/:id\" component={CountryPage} />\n            <Route path=\"/\">\n              <ActionList />\n              <CountryList />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_COUNTRY_LIST\": {\r\n      return { ...state, countryList: action.payload };\r\n    }\r\n    case \"SET_REGION\": {\r\n      let countryListByRegion = state.countryList.filter(\r\n        (country) => country.region === action.payload\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        region: action.payload,\r\n        countryListByRegion,\r\n      };\r\n    }\r\n    case \"SET_NAME\": {\r\n      let list;\r\n      if (state.region !== \"none\") {\r\n        list = state.countryListByRegion;\r\n      } else {\r\n        list = state.countryList;\r\n      }\r\n\r\n      let countryListByName = list.filter((country) =>\r\n        country.name.toLowerCase().includes(action.payload.toLowerCase())\r\n      );\r\n      return {\r\n        ...state,\r\n        countryListByName,\r\n        name: action.payload,\r\n      };\r\n    }\r\n    case \"SET_ERROR\": {\r\n      return { ...state, error: action.payload  };\r\n    }\r\n    case \"GET_COUNTRY\": {\r\n      return { ...state, country: action.payload };\r\n    }\r\n    case \"SET_FILTER\": {\r\n      let countryListFilter = state.countryList.filter((country) => {\r\n        let isFilter =\r\n          country.name\r\n            .toLowerCase()\r\n            .includes(\r\n              action.payload.name\r\n                ? action.payload.name.toLowerCase()\r\n                : undefined\r\n            ) || country.region === action.payload.region;\r\n        return isFilter;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        countryListFilter,\r\n        region: action.payload.region,\r\n        name: action.payload.name,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n  return state;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}